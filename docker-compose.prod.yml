version: '3.8'

services:
  notify-chat-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notify-chat-production
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
    env_file:
      - .env.production
    depends_on:
      - postgres
      - redis
    networks:
      - notify-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:15-alpine
    container_name: notify-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: notify_chat_production
      POSTGRES_USER: notify_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - notify-network

  redis:
    image: redis:7-alpine
    container_name: notify-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - notify-network

  nginx:
    image: nginx:alpine
    container_name: notify-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - notify-chat-service
    networks:
      - notify-network

volumes:
  postgres_data:
  redis_data:

networks:
  notify-network:
    driver: bridge
