basePath: /api/v1
definitions:
  chat-service_internal_models.Channel:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      members:
        items:
          $ref: '#/definitions/chat-service_internal_models.User'
        type: array
      name:
        type: string
      ownerId:
        description: userid
        type: integer
      type:
        description: Use consts
        type: string
      updated_at:
        type: string
    type: object
  chat-service_internal_models.ChannelListResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      ownerId:
        type: integer
      type:
        type: string
    type: object
  chat-service_internal_models.ChannelResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      members:
        description: List of members in the channel
        items:
          $ref: '#/definitions/chat-service_internal_models.User'
        type: array
      name:
        type: string
      ownerId:
        type: integer
      type:
        type: string
    type: object
  chat-service_internal_models.ChatRequest:
    properties:
      channelId:
        description: for channel
        type: integer
      fileName:
        type: string
      receiverId:
        description: for direct
        type: integer
      text:
        type: string
      type:
        enum:
        - direct
        - channel
        type: string
      url:
        type: string
    required:
    - type
    type: object
  chat-service_internal_models.ChatResponse:
    properties:
      channelId:
        description: channel
        type: integer
      createdAt:
        type: string
      fileName:
        type: string
      id:
        type: integer
      receiverId:
        description: Relate to type message
        type: integer
      senderId:
        type: integer
      senderName:
        type: string
      text:
        type: string
      type:
        description: '"direct" | "channel"'
        type: string
      url:
        type: string
    type: object
  chat-service_internal_models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  chat-service_internal_models.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/chat-service_internal_models.UserResponse'
    type: object
  chat-service_internal_models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  chat-service_internal_models.User:
    properties:
      channels:
        items:
          $ref: '#/definitions/chat-service_internal_models.Channel'
        type: array
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  chat-service_internal_models.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: A RESTful API service for chat functionality
  title: Notify Chat Service API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat-service_internal_models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful - returns JWT token and user data
          schema:
            $ref: '#/definitions/chat-service_internal_models.LoginResponse'
        "400":
          description: Bad request - invalid input data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - invalid credentials
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, email, and password
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat-service_internal_models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/chat-service_internal_models.UserResponse'
        "400":
          description: Bad request - invalid input data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /channels/:
    get:
      consumes:
      - application/json
      description: Get all channels that the current user is a member of
      produces:
      - application/json
      responses:
        "200":
          description: List of user's channels
          schema:
            items:
              $ref: '#/definitions/chat-service_internal_models.ChannelListResponse'
            type: array
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user's channels
      tags:
      - channels
    post:
      consumes:
      - application/json
      description: Create a new channel with the specified name
      parameters:
      - description: Channel creation data
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Channel created successfully
          schema:
            $ref: '#/definitions/chat-service_internal_models.ChannelResponse'
        "400":
          description: Bad request - invalid input data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new channel
      tags:
      - channels
  /channels/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a channel (only channel owner can delete)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Channel deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete channel
      tags:
      - channels
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Channel details retrieved successfully
          schema:
            $ref: '#/definitions/chat-service_internal_models.ChannelResponse'
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get channel by ID
      tags:
      - channels
    put:
      consumes:
      - application/json
      description: Update the name of an existing channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Channel update data
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Channel updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid input data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update channel
      tags:
      - channels
  /channels/{id}/user:
    delete:
      consumes:
      - application/json
      description: Remove a user from a channel (only channel owner can remove users)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: User removal data
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: User removed from channel successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid input data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Remove user from channel
      tags:
      - channels
    post:
      consumes:
      - application/json
      description: Add a user to a channel (only channel owner can add users)
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: User addition data
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: User added to channel successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid input data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Add user to channel
      tags:
      - channels
    put:
      consumes:
      - application/json
      description: Remove the current user from a channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User left channel successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Leave channel
      tags:
      - channels
  /chats/:
    post:
      consumes:
      - application/json
      description: Create a new chat message (channel or direct)
      parameters:
      - description: Chat message data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat-service_internal_models.ChatRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Chat message created
          schema:
            $ref: '#/definitions/chat-service_internal_models.ChatResponse'
        "400":
          description: Bad request - invalid input data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new chat message
      tags:
      - chats
  /messages/channel/{id}:
    get:
      consumes:
      - application/json
      description: Get all chat messages for a specific channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of chat messages
          schema:
            items:
              $ref: '#/definitions/chat-service_internal_models.ChatResponse'
            type: array
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Channel not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get chat messages in a channel
      tags:
      - chats
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get the current user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/chat-service_internal_models.UserResponse'
        "401":
          description: Unauthorized - invalid or missing token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
  /ws:
    get:
      consumes:
      - application/json
      description: Establish a WebSocket connection for real-time messaging
      parameters:
      - description: User ID for WebSocket connection
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols - WebSocket connection established
        "400":
          description: Bad request - missing or invalid userId parameter
          schema:
            additionalProperties: true
            type: object
      summary: WebSocket connection
      tags:
      - websocket
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
